{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "Diamond Reports"
  },
  "host": "localhost:44300",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/authtest/user": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "operationId": "AuthTest_GetUserInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/authtest/all": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "operationId": "AuthTest_GetAllInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/Location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Returns the EntitySet Location",
        "operationId": "Location_GetLocation",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ODataResponse[List[LocationsDTO]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Location({Id})": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Returns the entity with the key from Location",
        "operationId": "Location_GetLocationById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ODataResponse[List[LocationsDTO]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Passerby": {
      "get": {
        "tags": [
          "Passerby"
        ],
        "summary": "PasserbyAPI",
        "description": "This endpoint is used to fetch the Passerby details using a locationId.\r\nIt is recommended to use this endpoint with various filters.\r\nIf no filters are detected, present day's records will be returned.\r\nThe response PageSize limit is 7200. If your query exceeds the limit, \r\nplease retrieve the response over multiple requests as shown in the example.",
        "operationId": "Passerby_GetPasserby",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "opts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ODataQueryOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ODataResponse[List[PasserbyDTO]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Passerby({LocationId})": {
      "get": {
        "tags": [
          "Passerby"
        ],
        "summary": "PasserbyAPI",
        "description": "This endpoint is used to fetch the Passerby details for all locations.\r\nThe default",
        "operationId": "Passerby_GetPasserbyByLocationid",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LocationId",
            "in": "path",
            "description": "key: LocationId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "opts",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ODataQueryOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ODataResponse[List[PasserbyDTO]]"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ODataResponse[List[LocationsDTO]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationsDTO"
          }
        }
      }
    },
    "LocationsDTO": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LocalName": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "GlobalName": {
          "type": "string"
        },
        "PathId": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            100,
            101
          ],
          "type": "integer"
        }
      }
    },
    "ODataQueryOptions": {
      "type": "object",
      "properties": {
        "request": {
          "type": "object",
          "readOnly": true
        },
        "ifMatch": {
          "type": "object",
          "readOnly": true
        },
        "ifNoneMatch": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "ODataQueryContext": {
      "type": "object",
      "properties": {
        "elementClrType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ODataRawQueryOptions": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "readOnly": true
        },
        "apply": {
          "type": "string",
          "readOnly": true
        },
        "orderBy": {
          "type": "string",
          "readOnly": true
        },
        "top": {
          "type": "string",
          "readOnly": true
        },
        "skip": {
          "type": "string",
          "readOnly": true
        },
        "select": {
          "type": "string",
          "readOnly": true
        },
        "expand": {
          "type": "string",
          "readOnly": true
        },
        "count": {
          "type": "string",
          "readOnly": true
        },
        "format": {
          "type": "string",
          "readOnly": true
        },
        "skipToken": {
          "type": "string",
          "readOnly": true
        },
        "deltaToken": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SelectExpandQueryOption": {
      "type": "object",
      "properties": {
        "rawSelect": {
          "type": "string",
          "readOnly": true
        },
        "rawExpand": {
          "type": "string",
          "readOnly": true
        },
        "levelsMaxLiteralExpansionDepth": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApplyQueryOption": {
      "type": "object",
      "properties": {
        "resultClrType": {
          "type": "string",
          "readOnly": true
        },
        "rawValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FilterQueryOption": {
      "type": "object",
      "properties": {
        "rawValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderByQueryOption": {
      "type": "object",
      "properties": {
        "rawValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkipQueryOption": {
      "type": "object",
      "properties": {
        "rawValue": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "TopQueryOption": {
      "type": "object",
      "properties": {
        "rawValue": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "CountQueryOption": {
      "type": "object",
      "properties": {
        "rawValue": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ODataQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "DefaultQuerySettings": {
      "type": "object",
      "properties": {
        "enableExpand": {
          "type": "boolean"
        },
        "enableSelect": {
          "type": "boolean"
        },
        "enableCount": {
          "type": "boolean"
        },
        "enableOrderBy": {
          "type": "boolean"
        },
        "enableFilter": {
          "type": "boolean"
        },
        "maxTop": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "IEdmModel": {
      "type": "object",
      "properties": {
        "declaredNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "IEdmType": {
      "type": "object",
      "properties": {
        "typeKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmNavigationSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ODataPath": {
      "type": "object",
      "properties": {
        "pathTemplate": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IServiceProvider": {
      "type": "object",
      "properties": {}
    },
    "SelectExpandQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "SelectExpandClause": {
      "type": "object",
      "properties": {
        "allSelected": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ApplyClause": {
      "type": "object",
      "properties": {}
    },
    "FilterQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "FilterClause": {
      "type": "object",
      "properties": {}
    },
    "OrderByNode": {
      "type": "object",
      "properties": {
        "direction": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "OrderByQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "OrderByClause": {
      "type": "object",
      "properties": {
        "direction": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SkipQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "TopQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "CountQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "IEdmSchemaElement": {
      "type": "object",
      "properties": {
        "schemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmVocabularyAnnotation": {
      "type": "object",
      "properties": {
        "qualifier": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmDirectValueAnnotationsManager": {
      "type": "object",
      "properties": {}
    },
    "IEdmEntityContainer": {
      "type": "object",
      "properties": {
        "schemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmNavigationPropertyBinding": {
      "type": "object",
      "properties": {}
    },
    "IEdmPathExpression": {
      "type": "object",
      "properties": {
        "pathSegments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "path": {
          "type": "string",
          "readOnly": true
        },
        "expressionKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ODataPathSegment": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        }
      }
    },
    "SelectItem": {
      "type": "object",
      "properties": {}
    },
    "TransformationNode": {
      "type": "object",
      "properties": {
        "kind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SingleValueNode": {
      "type": "object",
      "properties": {
        "kind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "RangeVariable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmTypeReference": {
      "type": "object",
      "properties": {
        "isNullable": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "IEdmTerm": {
      "type": "object",
      "properties": {
        "appliesTo": {
          "type": "string",
          "readOnly": true
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true
        },
        "schemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmVocabularyAnnotatable": {
      "type": "object",
      "properties": {}
    },
    "IEdmExpression": {
      "type": "object",
      "properties": {
        "expressionKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmEntityContainerElement": {
      "type": "object",
      "properties": {
        "containerElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmNavigationProperty": {
      "type": "object",
      "properties": {
        "onDelete": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "containsTarget": {
          "type": "boolean",
          "readOnly": true
        },
        "propertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmReferentialConstraint": {
      "type": "object",
      "properties": {}
    },
    "IEdmStructuredType": {
      "type": "object",
      "properties": {
        "isAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "isOpen": {
          "type": "boolean",
          "readOnly": true
        },
        "typeKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "EdmReferentialConstraintPropertyPair": {
      "type": "object",
      "properties": {}
    },
    "IEdmProperty": {
      "type": "object",
      "properties": {
        "propertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmStructuralProperty": {
      "type": "object",
      "properties": {
        "defaultValueString": {
          "type": "string",
          "readOnly": true
        },
        "propertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ODataResponse[List[PasserbyDTO]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasserbyDTO"
          }
        }
      }
    },
    "PasserbyDTO": {
      "type": "object",
      "properties": {
        "DateId": {
          "format": "int32",
          "type": "integer"
        },
        "Granularity": {
          "format": "int32",
          "enum": [
            0,
            1,
            5,
            15,
            30,
            60,
            1000,
            1001,
            1002,
            1003
          ],
          "type": "integer"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TimeId": {
          "format": "int32",
          "type": "integer"
        },
        "Count": {
          "format": "int32",
          "type": "integer"
        },
        "ForecastCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "description": "Filling bearer token here",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [],
  "tags": []
}
